FROM python:3.12-alpine3.21 as base

# Add labels
LABEL maintainer="denverprogrammer@gmail.com"
LABEL version="1.0.0"
LABEL description="Python base image"
LABEL org.opencontainers.image.source="https://github.com/denverprogrammer/tradertrackrecord"
LABEL org.opencontainers.image.licenses="MIT"


# do not write pyc files
ENV PYTHONDONTWRITEBYTECODE 1
# prevent buffering stdout and stderr
ENV PYTHONUNBUFFERED 1
# enable Python tracebacks on segfaults
ENV PYTHONFAULTHANDLER 1
# Disable Poetry virtual environments
ENV POETRY_VIRTUALENVS_CREATE=false
# set locale
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

FROM base as dependencies

LABEL maintainer="denverprogrammer@gmail.com"
LABEL version="1.0.0"
LABEL description="Python dependency image"
LABEL org.opencontainers.image.source="https://github.com/denverprogrammer/tradertrackrecord"
LABEL org.opencontainers.image.licenses="MIT"


RUN  mkdir -p /home/backend \
    && mkdir -p /home/libs/vega

COPY ./projects/backend/pyproject.toml ./projects/backend/poetry.lock /home/backend/
COPY ./libs/config /libs/config
COPY ./libs/vega /libs/vega
WORKDIR /home/backend

RUN apk update \
    && apk add --no-cache postgresql-libs \
    && apk add --no-cache --virtual .build-deps gcc musl-dev postgresql-dev zlib-dev libjpeg-turbo-dev \
    && pip install --upgrade pip --root-user-action=ignore \
    && pip install poetry \
    && poetry install --no-root --no-interaction


FROM base as compiled

LABEL maintainer="denverprogrammer@gmail.com"
LABEL version="1.0.0"
LABEL description="Python backend image"
LABEL org.opencontainers.image.source="https://github.com/denverprogrammer/tradertrackrecord"
LABEL org.opencontainers.image.licenses="MIT"


RUN apk update \
    && apk add libpq libjpeg-turbo-dev \
    && mkdir -p /home/libs/vega \
    && mkdir -p /home/backend

COPY --from=dependencies /usr/local /usr/local
COPY --from=dependencies /libs/config /libs/config
COPY --from=dependencies /libs/vega /libs/vega

ADD ./projects/backend/scripts/entrypoint.sh /home/scripts/entrypoint.sh
RUN chmod 755 /home/scripts/entrypoint.sh

COPY ./projects/backend /home/backend
WORKDIR /home/backend

ENTRYPOINT ["/bin/sh", "/home/scripts/entrypoint.sh"]

# ENTRYPOINT ["tail", "-f", "/dev/null"]
