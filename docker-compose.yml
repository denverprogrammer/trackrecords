version: "3.9"
   
services:

    database:
        image: postgis/postgis:15-3.3-alpine
        volumes:
            - postgres_data:/var/lib/postgresql/data/
            - import_volume:/home/data
        environment:
            - POSTGRES_DB=${DATABASE_NAME}
            - POSTGRES_PORT=${DATABASE_PORT}
            - POSTGRES_USER=${DATABASE_USER}
            - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
        networks:
            - main

    backend:
        build: 
            context: ./backend
            dockerfile: ../docker/backend
        volumes:
            - ./docker/mktsymbols_v2.tsv:/data/mktsymbols_v2.tsv
            - ./backend:/home/backend
            - static_volume:/home/static
            - media_volume:/home/media
            - import_volume:/home/data
        depends_on:
            - database
        networks:
            - main
        environment:
            - SECRET_KEY=${SECRET_KEY}
            - DEBUG=${DEBUG}
            - ALLOWED_HOSTS=${ALLOWED_HOSTS}
            - DATABASE_NAME=${DATABASE_NAME}
            - DATABASE_USER=${DATABASE_USER}
            - DATABASE_PASSWORD=${DATABASE_PASSWORD}
            - DATABASE_HOST=${DATABASE_HOST}
            - DATABASE_PORT=${DATABASE_PORT}

    webserver:
        image: nginx:1.23.2-alpine
        ports:
            - 80:80
        volumes:
            - ./docker/local.conf:/etc/nginx/conf.d/default.conf
            - static_volume:/home/static
            - media_volume:/home/media
        depends_on:
            - backend
        networks:
            - main

    adminer:
        image: adminer
        restart: always
        ports:
            - 8080:8080
        depends_on:
            - database
        volumes:
            - ./docker/admin.ini:/usr/local/etc/php/conf.d/0-upload_large_dumps.ini
        networks:
            - main

volumes:
    postgres_data:
    static_volume:
    media_volume:
    import_volume:

networks:
    main:
